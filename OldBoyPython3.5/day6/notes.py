__author__ = "gavin li"

'''
面向对象
-- 编程范式
    编程：语法+数据结构+算法
    1、面向过程编程
        procedural programming uses a list of instructions to tell the computer what to do step-by-step
        面向过程依赖procedures 一个procedures包含一组要被计算的步骤，面向过程又被称为top-down languages,就是程序从上向下一步一步执行。
    2、面向对象编程
        OOP(object oriented programming)是利用类和对象来描述真实世界，使用面向对象编程的原因一方面是因为他可以使程序的维护和扩展变得简单，
        并且可以大大提高开发效率，另外基于面向对象的编程可以使它人更容易理解你的逻辑代码，从而使开发团队变得更从容。
        
        世界万物皆可分类
        世界成物皆对象
        只要是对象，就肯定属于基种品类，只要是对象，就肯定有属性。
        面向
    3、面向函数编程
特性：
class：一个类即是对一类拥有相同属性的对象的抽象、蓝图、原型。在类中定义了这些对象都具备的属性和方法
object：一个对象即是一个类实例化后的实例，一个类必须经过实例化后方可在程序中调用，一个实可以实例化多个对象，每个对象宜有不同的属性，就像人类是指所有人，
        每个人是具体的对象，每个人间有共性，宜有不同。
        
封装（Encapsulation）
    在类中对数据的赋值，内部调用对外部用户是透明的，这使类变成了一个胶囊或容器，里面包含着类的数据和方法
继承(Inheritance)
    一个类可以派生很多子类，在父类里定义的属性和方法自动被子类继承。
多态(Polymorphism)
    一个接口，多个实现，指一个基类中派生出了不同的子类，且每个子类继承了同样的方法名的同时又对父类的方法做了不同的实现。这就是同一个事物表现出的多种形态。
    编程其实就是一个将具体世界进行抽象化的过程，多态就是抽象化的一种体现，把一系列具体共同的事物抽像出来。再通过这个抽像的事物，与不同的具体的事物对话。
    多态允许将子类的对象当作父类的对象引用，某父类的引用指向其子类的对象，调用的方法是该子类的方法，这里的引用和调用方法的代码编译就决定了，而引用所指向的对象可以在运行期间动态绑定。

    
    一个接口，多种实现，



'''
